# syntax=docker/dockerfile:experimental
FROM docker.io/jrottenberg/ffmpeg:snapshot-ubuntu as ffmpeg
FROM docker.io/nvidia/cuda:11.2.0-cudnn8-devel-ubuntu20.04 as build

ENV POETRY_HOME="/opt/poetry" \
    POETRY_VIRTUALENVS_IN_PROJECT=true \
    POETRY_VERSION=1.1.13

ENV PATH="/opt/.venv/bin:$POETRY_HOME/bin:$PATH" \
    PYTHON_BINARY="/opt/.venv/bin/python"

ARG GEN_PYTORCH_EXT
ARG GEN_OPENGL_EXT

RUN apt update && DEBIAN_FRONTEND=noninteractive \
    apt -y install \
    git wget cmake \
    build-essential curl \
    libtheora-dev libvorbis-dev \
    libglu1-mesa-dev freeglut3-dev \
    libnvidia-decode-510 \
    ninja-build \
    pkg-config \
    python3 python3-pip python3-venv && \
    rm -rf /var/lib/apt/lists/*

# https://python-poetry.org/docs/
WORKDIR $POETRY_HOME
RUN curl -sSL https://install.python-poetry.org | python3 -

WORKDIR /opt

COPY docker/Makefile docker/Makefile
COPY poetry.lock poetry.lock
COPY pyproject.toml pyproject.toml
COPY docker/poetry-env.sh docker/poetry-env.sh

RUN python3 -mpip install cmake
# Build poetry virtual environment
RUN bash docker/poetry-env.sh PYTHON_BINARY=$PYTHON_BINARY GEN_PYTORCH_EXT="$GEN_PYTORCH_EXT" GEN_OPENGL_EXT="$GEN_OPENGL_EXT"

# Build vpf
COPY src src
COPY pyproject.toml pyproject.toml
COPY setup.py setup.py
COPY CMakeLists.txt CMakeLists.txt
COPY --from=ffmpeg /usr/local /opt/ffmpeg
# We need to patch pkgconfig since we rectlessly moved the whole directory
RUN sed -i 's/\/usr\/local/\/opt\/ffmpeg/g' /opt/ffmpeg/lib/pkgconfig/*

RUN PKG_CONFIG_PATH=/opt/ffmpeg/lib/pkgconfig/ python3 -mpip wheel . --verbose

FROM docker.io/nvidia/cuda:11.2.0-cudnn8-runtime-ubuntu20.04

RUN apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get -y install \
    git build-essential libbsd0 \
    wget cmake libtbb-dev \
    libjpeg8-dev libpng-dev libtiff-dev \
    libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev \
    libdc1394-22-dev libssl-dev \
    libnvidia-decode-510 \
    libxine2-dev libv4l-dev \
    libboost-all-dev libdc1394-22-dev \
    libglu1-mesa-dev freeglut3-dev \
    python3 python3-pip python3-venv curl

WORKDIR /opt

COPY --from=build /opt/PyNvCodec-*.whl /opt 

COPY --from=build /opt/poetry /opt/poetry
COPY --from=build /opt/ffmpeg/lib/lib*.so.* /opt/ffmpeg/lib/
# Normally we'd reinstall the enviroment but pycuda is built with cuda headers
# which are not available in the nvidia runtime image
COPY --from=build /opt/.venv /opt/.venv
COPY . .

ENV POETRY_HOME="/opt/poetry"

ENV PATH="/opt/.venv/bin:$POETRY_HOME/bin:$PATH" \
    LD_LIBRARY_PATH="$LD_LIBRARY_PATH:/opt/dist:/opt/ffmpeg/lib:/opt/dist/bin:/usr/local/cuda-11.2/compat/" \
    PYTHONPATH=/opt/.venv/bin:/opt/dist:/opt/dist/bin

RUN python3 --version && python3 -mpip install PyNvCodec-*.whl && rm *.whl
RUN python3 -c "import PyNvCodec"

ENTRYPOINT ["/bin/bash"]
