FROM nvcr.io/nvidia/tensorrt:21.08-py3 as build
WORKDIR /opt

ENV POETRY_HOME="/opt/poetry" \
    POETRY_VIRTUALENVS_IN_PROJECT=true \
    POETRY_VERSION=1.1.14 \
    DEBIAN_FRONTEND=noninteractive
ENV PATH="/opt/.venv/bin:$POETRY_HOME/bin:$PATH" \
    PYTHON_BINARY="/opt/.venv/bin/python"

ARG GEN_PYTORCH_EXT

RUN apt update \
    && apt install -y --no-install-recommends \
        libavformat-dev python3.8-venv python3.8-dev \
    && apt clean \
    && rm -rf /var/lib/apt/lists/*
RUN curl -sSL https://install.python-poetry.org | python3 -

# Build FFmpeg as shared lib
RUN git clone https://github.com/FFmpeg/FFmpeg.git && \
    cd FFmpeg && \
    ./configure --disable-x86asm --enable-shared --enable-pic && \
    make -j $(nproc) && \
    make install 

ADD . .
RUN make -f docker/Makefile build_env EXTRAS=vpf-tensorrt
RUN make -f docker/Makefile vpf_built \
    PYTHON_BINARY=$PYTHON_BINARY \
    GEN_PYTORCH_EXT=$GEN_PYTORCH_EXT \ 
    VIDEO_CODEC_SDK=/opt/Video_Codec_SDK \
    && rm -rf build \
    && rm -rf /root/.cache \
    && rm -rf /var/cache \
    && rm -rf /opt/dist/bin/*.py \
    && rm -rf /opt/dist/bin/*.mp4


FROM nvcr.io/nvidia/tensorrt:21.08-py3
ARG GEN_PYTORCH_EXT

COPY --from=build /opt/dist /opt/dist
COPY --from=build /opt/FFmpeg/ /opt/FFmpeg
RUN cd /opt/FFmpeg && make install && rm -rf *

ENV LD_LIBRARY_PATH="/opt/dist/bin:${LD_LIBRARY_PATH}" \
    PYTHONPATH="/opt/dist/bin" \
    DEBIAN_FRONTEND=noninteractive

WORKDIR /app
RUN pip install --no-cache-dir poetry && poetry config virtualenvs.create false

COPY . .
RUN if [[ -n $GEN_PYTORCH_EXT ]] ; then  poetry install --extras vpf-tensorrt; fi 

ENTRYPOINT ["/bin/bash"]
